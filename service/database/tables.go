package database

var USER_TABLE = `CREATE TABLE IF NOT EXISTS User(
	user_id INTEGER PRIMARY KEY AUTOINCREMENT,
	username STRING NOT NULL UNIQUE,
	UNIQUE (user_id) ON CONFLICT REPLACE
);`

var PHOTO_TABLE = `CREATE TABLE IF NOT EXISTS Photo(
    photo_id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INT NOT NULL,
    caption STRING NOT NULL,
    photo BLOB NOT NULL,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(photo_id, user_id),
    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE
);`

var COMMENT_TABLE = `CREATE TABLE IF NOT EXISTS Comment (
    comment_id INTEGER PRIMARY KEY AUTOINCREMENT,
    post_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    text TEXT NOT NULL,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (post_id) REFERENCES Photo(photo_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE
);`

var LIKE_TABLE = `CREATE TABLE IF NOT EXISTS Like (
    user_id INTEGER NOT NULL,
    owner_id INTEGER NOT NULL,
    post_id INTEGER NOT NULL,
    PRIMARY KEY (post_id, owner_id, user_id),
    FOREIGN KEY (post_id) REFERENCES Photo(photo_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE
);`

var FOLLOW_TABLE = `CREATE TABLE IF NOT EXISTS Follow(
	following_id INTEGER NOT NULL,
	followed_id INTEGER NOT NULL,
	PRIMARY KEY(following_id,followed_id),
	FOREIGN KEY(following_id) REFERENCES User(user_id)
		ON DELETE CASCADE,
	FOREIGN KEY(followed_id) REFERENCES User(user_id)
		ON DELETE CASCADE
);`

var BAN_TABLE = `CREATE TABLE IF NOT EXISTS Ban(
	banning_id INTEGER NOT NULL,
	banned_id INTEGER NOT NULL,
	PRIMARY KEY(banning_id,banned_id)
	FOREIGN KEY(banning_id) REFERENCES User(user_id)
		ON DELETE CASCADE,
	FOREIGN KEY(banned_id) REFERENCES User(user_id)
		ON DELETE CASCADE
);`
